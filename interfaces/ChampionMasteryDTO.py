# generated by datamodel-codegen:
#   filename:  input.json
#   timestamp: 2024-10-06T15:16:14+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class RequireGradeCounts(BaseModel):
    B_: Optional[int] = Field(None, alias="B-")
    C_: Optional[int] = Field(None, alias="C-")


class RewardConfig(BaseModel):
    rewardValue: Optional[str] = None
    rewardType: Optional[str] = None
    maximumReward: Optional[int] = None


class NextSeasonMilestone(BaseModel):
    requireGradeCounts: Optional[RequireGradeCounts] = None
    rewardMarks: Optional[int] = None
    bonus: Optional[bool] = None
    rewardConfig: Optional[RewardConfig] = None
    totalGamesRequires: Optional[int] = None


class ChampionMasteryDTO(BaseModel):
    puuid: Optional[str] = None
    championId: Optional[int] = None
    championLevel: Optional[int] = None
    championPoints: Optional[int] = None
    lastPlayTime: Optional[int] = None
    championPointsSinceLastLevel: Optional[int] = None
    championPointsUntilNextLevel: Optional[int] = None
    markRequiredForNextLevel: Optional[int] = None
    tokensEarned: Optional[int] = None
    championSeasonMilestone: Optional[int] = None
    nextSeasonMilestone: Optional[NextSeasonMilestone] = None
    milestoneGrades: Optional[List[str]] = None
